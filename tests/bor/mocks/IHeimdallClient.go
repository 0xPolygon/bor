// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ethereum/go-ethereum/consensus/bor (interfaces: IHeimdallClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	types "github.com/0xPolygon/heimdall-v2/x/bor/types"
	clerk "github.com/ethereum/go-ethereum/consensus/bor/clerk"
	checkpoint "github.com/ethereum/go-ethereum/consensus/bor/heimdall/checkpoint"
	milestone "github.com/ethereum/go-ethereum/consensus/bor/heimdall/milestone"
	span "github.com/ethereum/go-ethereum/consensus/bor/heimdall/span"
	gomock "github.com/golang/mock/gomock"
)

// MockIHeimdallClient is a mock of IHeimdallClient interface.
type MockIHeimdallClient struct {
	ctrl     *gomock.Controller
	recorder *MockIHeimdallClientMockRecorder
}

// MockIHeimdallClientMockRecorder is the mock recorder for MockIHeimdallClient.
type MockIHeimdallClientMockRecorder struct {
	mock *MockIHeimdallClient
}

// NewMockIHeimdallClient creates a new mock instance.
func NewMockIHeimdallClient(ctrl *gomock.Controller) *MockIHeimdallClient {
	mock := &MockIHeimdallClient{ctrl: ctrl}
	mock.recorder = &MockIHeimdallClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHeimdallClient) EXPECT() *MockIHeimdallClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockIHeimdallClient) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockIHeimdallClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockIHeimdallClient)(nil).Close))
}

// FetchCheckpointCount mocks base method.
func (m *MockIHeimdallClient) FetchCheckpointCount(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchCheckpointCount", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchCheckpointCount indicates an expected call of FetchCheckpointCount.
func (mr *MockIHeimdallClientMockRecorder) FetchCheckpointCount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchCheckpointCount", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchCheckpointCount), arg0)
}

// FetchCheckpointV1 mocks base method.
func (m *MockIHeimdallClient) FetchCheckpointV1(arg0 context.Context, arg1 int64) (*checkpoint.CheckpointV1, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchCheckpointV1", arg0, arg1)
	ret0, _ := ret[0].(*checkpoint.CheckpointV1)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchCheckpointV1 indicates an expected call of FetchCheckpointV1.
func (mr *MockIHeimdallClientMockRecorder) FetchCheckpointV1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchCheckpointV1", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchCheckpointV1), arg0, arg1)
}

// FetchCheckpointV2 mocks base method.
func (m *MockIHeimdallClient) FetchCheckpointV2(arg0 context.Context, arg1 int64) (*checkpoint.CheckpointV2, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchCheckpointV2", arg0, arg1)
	ret0, _ := ret[0].(*checkpoint.CheckpointV2)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchCheckpointV2 indicates an expected call of FetchCheckpointV2.
func (mr *MockIHeimdallClientMockRecorder) FetchCheckpointV2(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchCheckpointV2", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchCheckpointV2), arg0, arg1)
}

// FetchLastNoAckMilestone mocks base method.
func (m *MockIHeimdallClient) FetchLastNoAckMilestone(arg0 context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchLastNoAckMilestone", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchLastNoAckMilestone indicates an expected call of FetchLastNoAckMilestone.
func (mr *MockIHeimdallClientMockRecorder) FetchLastNoAckMilestone(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchLastNoAckMilestone", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchLastNoAckMilestone), arg0)
}

// FetchMilestoneCount mocks base method.
func (m *MockIHeimdallClient) FetchMilestoneCount(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMilestoneCount", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMilestoneCount indicates an expected call of FetchMilestoneCount.
func (mr *MockIHeimdallClientMockRecorder) FetchMilestoneCount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMilestoneCount", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchMilestoneCount), arg0)
}

// FetchMilestoneV1 mocks base method.
func (m *MockIHeimdallClient) FetchMilestoneV1(arg0 context.Context) (*milestone.MilestoneV1, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMilestoneV1", arg0)
	ret0, _ := ret[0].(*milestone.MilestoneV1)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMilestoneV1 indicates an expected call of FetchMilestoneV1.
func (mr *MockIHeimdallClientMockRecorder) FetchMilestoneV1(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMilestoneV1", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchMilestoneV1), arg0)
}

// FetchMilestoneV2 mocks base method.
func (m *MockIHeimdallClient) FetchMilestoneV2(arg0 context.Context) (*milestone.MilestoneV2, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMilestoneV2", arg0)
	ret0, _ := ret[0].(*milestone.MilestoneV2)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMilestoneV2 indicates an expected call of FetchMilestoneV2.
func (mr *MockIHeimdallClientMockRecorder) FetchMilestoneV2(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMilestoneV2", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchMilestoneV2), arg0)
}

// FetchNoAckMilestone mocks base method.
func (m *MockIHeimdallClient) FetchNoAckMilestone(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchNoAckMilestone", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// FetchNoAckMilestone indicates an expected call of FetchNoAckMilestone.
func (mr *MockIHeimdallClientMockRecorder) FetchNoAckMilestone(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchNoAckMilestone", reflect.TypeOf((*MockIHeimdallClient)(nil).FetchNoAckMilestone), arg0, arg1)
}

// GetLatestSpanV1 mocks base method.
func (m *MockIHeimdallClient) GetLatestSpanV1(arg0 context.Context) (*span.HeimdallSpan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestSpanV1", arg0)
	ret0, _ := ret[0].(*span.HeimdallSpan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestSpanV1 indicates an expected call of GetLatestSpanV1.
func (mr *MockIHeimdallClientMockRecorder) GetLatestSpanV1(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestSpanV1", reflect.TypeOf((*MockIHeimdallClient)(nil).GetLatestSpanV1), arg0)
}

// GetLatestSpanV2 mocks base method.
func (m *MockIHeimdallClient) GetLatestSpanV2(arg0 context.Context) (*types.Span, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestSpanV2", arg0)
	ret0, _ := ret[0].(*types.Span)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestSpanV2 indicates an expected call of GetLatestSpanV2.
func (mr *MockIHeimdallClientMockRecorder) GetLatestSpanV2(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestSpanV2", reflect.TypeOf((*MockIHeimdallClient)(nil).GetLatestSpanV2), arg0)
}

// GetSpanV1 mocks base method.
func (m *MockIHeimdallClient) GetSpanV1(arg0 context.Context, arg1 uint64) (*span.HeimdallSpan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpanV1", arg0, arg1)
	ret0, _ := ret[0].(*span.HeimdallSpan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpanV1 indicates an expected call of GetSpanV1.
func (mr *MockIHeimdallClientMockRecorder) GetSpanV1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpanV1", reflect.TypeOf((*MockIHeimdallClient)(nil).GetSpanV1), arg0, arg1)
}

// GetSpanV2 mocks base method.
func (m *MockIHeimdallClient) GetSpanV2(arg0 context.Context, arg1 uint64) (*types.Span, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpanV2", arg0, arg1)
	ret0, _ := ret[0].(*types.Span)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpanV2 indicates an expected call of GetSpanV2.
func (mr *MockIHeimdallClientMockRecorder) GetSpanV2(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpanV2", reflect.TypeOf((*MockIHeimdallClient)(nil).GetSpanV2), arg0, arg1)
}

// StateSyncEventsV1 mocks base method.
func (m *MockIHeimdallClient) StateSyncEventsV1(arg0 context.Context, arg1 uint64, arg2 int64) ([]*clerk.EventRecordWithTime, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StateSyncEventsV1", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*clerk.EventRecordWithTime)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StateSyncEventsV1 indicates an expected call of StateSyncEventsV1.
func (mr *MockIHeimdallClientMockRecorder) StateSyncEventsV1(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateSyncEventsV1", reflect.TypeOf((*MockIHeimdallClient)(nil).StateSyncEventsV1), arg0, arg1, arg2)
}

// StateSyncEventsV2 mocks base method.
func (m *MockIHeimdallClient) StateSyncEventsV2(arg0 context.Context, arg1 uint64, arg2 int64) ([]*clerk.EventRecordWithTime, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StateSyncEventsV2", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*clerk.EventRecordWithTime)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StateSyncEventsV2 indicates an expected call of StateSyncEventsV2.
func (mr *MockIHeimdallClientMockRecorder) StateSyncEventsV2(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateSyncEventsV2", reflect.TypeOf((*MockIHeimdallClient)(nil).StateSyncEventsV2), arg0, arg1, arg2)
}
